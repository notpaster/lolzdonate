import requests
import random
import json
import time
import asyncio
from lolzapi import Lolz

token = "" # DonationAlerts Token
lzt = Lolz('') # LolzTeam Token

print("‚úÖ Lolz Api –ø–æ–¥–∫–ª—é—á–µ–Ω!")
print("‚úÖ Donation Alerts Api –ø–æ–¥–∫–ª—é—á–µ–Ω!")

payments = []
checked = []

def send_donat(name, amount, message):
    if message == "":
        message = "."
    data = {
        "id": 1,
        "name": "lolzteam",
        "external_id": "lolzid" + str(random.randint(100,100000)),
        "message": message,
        "currency": "RUB",
        "bought_amount": 2,
        "is_shown": 0,
        "header": f"{name} - {amount} RUB",
    }

    headers = {
        "Authorization": f"Bearer {token}",
        "Content-Type": "application/json"
    }

    r = requests.post(
        "https://www.donationalerts.com/api/v1/custom_alert",
        headers=headers,
        data=json.dumps(data)
    )

    if r.status_code == 201:
        print("‚úÖ –î–æ–Ω–∞—Ç —É—Å–ø–µ—à–Ω–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω!")
    else:
        print(r.text)
        print("‚ùå –î–æ–Ω–∞—Ç –Ω–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω")

async def fetch_payments(payments):
    while True:
        try:
            raw_data = lzt.get_payments()
        except:
            time.sleep(5)
            raw_data = lzt.get_payments()
        try:
            data = json.loads(raw_data)

            if "donats" in data and data["donats"]:
                for donat in data["donats"]:
                    if donat not in checked:
                        payments.append(donat)
                        checked.append(donat)
        except json.JSONDecodeError:
            print("–û—à–∏–±–∫–∞: –ü–æ–ª—É—á–µ–Ω—ã –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ:", raw_data)
        except Exception as e:
            print("–û—à–∏–±–∫–∞:", e)

        await asyncio.sleep(5)

async def process_payments(payments):
    while True:
        for donat in payments:
            send_donat(donat["username"], donat["amount"].replace(".00", ""), donat["comment"])
            print("üí≤ –ó–∞–ø—Ä–æ—Å –Ω–∞ –¥–æ–Ω–∞—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω!")
            payments.remove(donat)
            continue
        await asyncio.sleep(10)

async def main():
    payments = []
    await asyncio.gather(
        fetch_payments(payments),
        process_payments(payments)
    )

print("üîé –ò—â—É –Ω–æ–≤—ã–µ –¥–æ–Ω–∞—Ç—ã...")
asyncio.run(main())